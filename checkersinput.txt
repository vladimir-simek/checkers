
Player 1 kills Player 2:
	5,4
	a
	2,5
	b
	5,0
	b
	2,3
	b
	4,3
	b

///
String lowLeftOrRight = leftOrRight.toLowerCase(Locale.ROOT);
            intCoordinatesMoveTo[0] = intCoordinates[0];
            intCoordinatesMoveTo[1] = intCoordinates[1];
            if (runTimeCycles % 2 == 0) {
                if (lowLeftOrRight.equals("a")) {
                    intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] + 1;
                    intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] - 1;
                } else {
                    intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] + 1;
                    intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] + 1;
                }
            } else {
                if (lowLeftOrRight.equals("a")) {
                    intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] - 1;
                    intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] - 1;
                } else {
                    intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] - 1;
                    intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] + 1;
                }

            }

            if (fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]].equals(BLACK_SPOT)){

                fields[intCoordinates[0]][intCoordinates[1]] = BLACK_SPOT;

                if (runTimeCycles % 2 == 0) {
                    fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]] = PLAYER_2;
                } else {
                    fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]] = PLAYER_1;
                }
                intCoordinatesMoveToHigher = intCoordinatesMoveTo;

            } else if (fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]].equals(PLAYER_1) || fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]].equals(PLAYER_2)) {
                if (runTimeCycles % 2 == 0) {
                    if (lowLeftOrRight.equals("a")) {
                        intCoordinatesMoveToHigher[0] = intCoordinatesMoveToHigher[0] + 1;
                        intCoordinatesMoveToHigher[1] = intCoordinatesMoveToHigher[1] - 1;
                    } else {
                        intCoordinatesMoveToHigher[0] = intCoordinatesMoveToHigher[0] + 1;
                        intCoordinatesMoveToHigher[1] = intCoordinatesMoveToHigher[1] + 1;
                    }
                } else {
                    if (lowLeftOrRight.equals("a")) {
                        intCoordinatesMoveToHigher[0] = intCoordinatesMoveToHigher[0] - 1;
                        intCoordinatesMoveToHigher[1] = intCoordinatesMoveToHigher[1] - 1;
                    } else {
                        intCoordinatesMoveToHigher[0] = intCoordinatesMoveToHigher[0] - 1;
                        intCoordinatesMoveToHigher[1] = intCoordinatesMoveToHigher[1] + 1;
                    }

                }
                if (fields[intCoordinatesMoveToHigher[0]][intCoordinatesMoveToHigher[1]].equals(BLACK_SPOT)) {
                    fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]] = BLACK_SPOT;
                    fields[intCoordinates[0]][intCoordinates[1]] = BLACK_SPOT;
                    intCoordinatesMoveTo = intCoordinates;
                    if (runTimeCycles % 2 == 0) {
                        if (lowLeftOrRight.equals("a")) {
                            intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] + 1;
                            intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] - 1;
                        } else {
                            intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] + 1;
                            intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] + 1;
                        }
                    } else {
                        if (lowLeftOrRight.equals("a")) {
                            intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] - 1;
                            intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] - 1;
                        } else {
                            intCoordinatesMoveTo[0] = intCoordinatesMoveTo[0] - 1;
                            intCoordinatesMoveTo[1] = intCoordinatesMoveTo[1] + 1;
                        }

                    }
                    fields[intCoordinates[0]][intCoordinates[1]] = BLACK_SPOT;
                    fields[intCoordinatesMoveTo[0]][intCoordinatesMoveTo[1]] = BLACK_SPOT;
                    if (runTimeCycles % 2 == 0) {
                        fields[intCoordinatesMoveToHigher[0]][intCoordinatesMoveToHigher[1]] = PLAYER_2;
                    } else {
                        fields[intCoordinatesMoveToHigher[0]][intCoordinatesMoveToHigher[1]] = PLAYER_1;
                    }
                }
            }
            ///////////////////////